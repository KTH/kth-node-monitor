// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Class HealthCheck - in combination with local system status when local systems are in failed state - creates a snapshot 1`] = `
Object {
  "code": 503,
  "data": Object {
    "localSystems": Object {
      "message": "ERROR",
      "statusCode": 503,
    },
    "message": "ERROR",
    "statusCode": 503,
    "subSystems": Object {},
  },
  "text": "APPLICATION_STATUS: ERROR

- local system checks: ERROR

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with local system status when local systems are working - creates a snapshot 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "OK",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {},
  },
  "text": "APPLICATION_STATUS: OK

- local system checks: OK

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-agenda" when using mocked sub-system (mode "Optional") - creates a snapshot (system down) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "agenda": Object {
        "key": "agenda",
        "message": "- agenda: Error | The application can still function without this service functioning properly. | Ref: sfu8n1fu8n",
        "required": false,
        "statusCode": 503,
      },
    },
  },
  "mode": "Optional",
  "text": "APPLICATION_STATUS: OK

- agenda: Error | The application can still function without this service functioning properly. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-agenda" when using mocked sub-system (mode "Optional") - creates a snapshot (system up) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "agenda": Object {
        "key": "agenda",
        "message": "- agenda: OK | Required to work: false",
        "required": false,
        "statusCode": 200,
      },
    },
  },
  "mode": "Optional",
  "text": "APPLICATION_STATUS: OK

- agenda: OK | Required to work: false

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-agenda" when using mocked sub-system (mode "Required") - creates a snapshot (system down) 1`] = `
Object {
  "code": 503,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "ERROR",
    "statusCode": 503,
    "subSystems": Object {
      "agenda": Object {
        "key": "agenda",
        "message": "- agenda: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n",
        "required": true,
        "statusCode": 503,
      },
    },
  },
  "mode": "Required",
  "text": "APPLICATION_STATUS: ERROR

- agenda: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-agenda" when using mocked sub-system (mode "Required") - creates a snapshot (system up) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "agenda": Object {
        "key": "agenda",
        "message": "- agenda: OK | Required to work: true",
        "required": true,
        "statusCode": 200,
      },
    },
  },
  "mode": "Required",
  "text": "APPLICATION_STATUS: OK

- agenda: OK | Required to work: true

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-api" when using mocked sub-system (mode "Optional") - creates a snapshot (failing because of missing base path) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "testApi": Object {
        "key": "testApi",
        "message": "- testApi: ERROR - Configuration error | The application can still function without this service. | Ref: sfu8n1fu8n",
        "required": false,
        "responseTime": -1,
        "statusCode": 501,
      },
    },
  },
  "mode": "Optional",
  "text": "APPLICATION_STATUS: OK

- testApi: ERROR - Configuration error | The application can still function without this service. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-api" when using mocked sub-system (mode "Optional") - creates a snapshot (failing configuration w/o cache, missing endpoint config) 1`] = `
Object {
  "code": 503,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "ERROR: Cannot read property 'key' of null",
    "statusCode": 503,
    "subSystems": Array [
      Object {
        "queryAsync": [Function],
      },
    ],
  },
  "mode": "Optional",
  "text": "APPLICATION_STATUS: ERROR: Cannot read property 'key' of null



- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-api" when using mocked sub-system (mode "Optional") - creates a snapshot (failing configuration w/o cache, missing path config) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "testApi": Object {
        "key": "testApi",
        "message": "- testApi: ERROR - Configuration error | The application can still function without this service. | Ref: sfu8n1fu8n",
        "required": false,
        "responseTime": -1,
        "statusCode": 501,
      },
    },
  },
  "mode": "Optional",
  "text": "APPLICATION_STATUS: OK

- testApi: ERROR - Configuration error | The application can still function without this service. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-api" when using mocked sub-system (mode "Optional") - creates a snapshot (failing configuration w/o cache, missing path) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "testApi": Object {
        "key": "testApi",
        "message": "- testApi: ERROR - Configuration error | The application can still function without this service. | Ref: sfu8n1fu8n",
        "required": false,
        "responseTime": -1,
        "statusCode": 501,
      },
    },
  },
  "mode": "Optional",
  "text": "APPLICATION_STATUS: OK

- testApi: ERROR - Configuration error | The application can still function without this service. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-api" when using mocked sub-system (mode "Optional") - creates a snapshot (failing configuration w/o cache, rejecting client) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "testApi": Object {
        "key": "testApi",
        "message": "- testApi: ERROR - Unable to connect to the service. The service is probably down or it is a networking issue | Response time: 79ms | The application can still function without this service. | Ref: sfu8n1fu8n",
        "required": false,
        "responseTime": 79,
        "statusCode": 502,
      },
    },
  },
  "mode": "Optional",
  "text": "APPLICATION_STATUS: OK

- testApi: ERROR - Unable to connect to the service. The service is probably down or it is a networking issue | Response time: 79ms | The application can still function without this service. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-api" when using mocked sub-system (mode "Optional") - creates a snapshot (normal configuration w/o cache) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "testApi": Object {
        "key": "testApi",
        "message": "- testApi: OK | Response time: 79ms | Required to work: false",
        "required": false,
        "responseTime": 79,
        "statusCode": 200,
      },
    },
  },
  "mode": "Optional",
  "text": "APPLICATION_STATUS: OK

- testApi: OK | Response time: 79ms | Required to work: false

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-api" when using mocked sub-system (mode "Optional") - creates a snapshot (normal configuration with cache) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "undefined": Object {
        "message": "OK | Using previous cached response",
        "statusCode": 200,
      },
    },
  },
  "mode": "Optional",
  "text": "APPLICATION_STATUS: OK

OK | Using previous cached response

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-api" when using mocked sub-system (mode "Required") - creates a snapshot (failing because of missing base path) 1`] = `
Object {
  "code": 503,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "ERROR",
    "statusCode": 503,
    "subSystems": Object {
      "testApi": Object {
        "key": "testApi",
        "message": "- testApi: ERROR - Configuration error | Has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n",
        "required": true,
        "responseTime": -1,
        "statusCode": 501,
      },
    },
  },
  "mode": "Required",
  "text": "APPLICATION_STATUS: ERROR

- testApi: ERROR - Configuration error | Has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-api" when using mocked sub-system (mode "Required") - creates a snapshot (failing configuration w/o cache, missing endpoint config) 1`] = `
Object {
  "code": 503,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "ERROR: Cannot read property 'key' of null",
    "statusCode": 503,
    "subSystems": Array [
      Object {
        "queryAsync": [Function],
      },
    ],
  },
  "mode": "Required",
  "text": "APPLICATION_STATUS: ERROR: Cannot read property 'key' of null



- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-api" when using mocked sub-system (mode "Required") - creates a snapshot (failing configuration w/o cache, missing path config) 1`] = `
Object {
  "code": 503,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "ERROR",
    "statusCode": 503,
    "subSystems": Object {
      "testApi": Object {
        "key": "testApi",
        "message": "- testApi: ERROR - Configuration error | Has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n",
        "required": true,
        "responseTime": -1,
        "statusCode": 501,
      },
    },
  },
  "mode": "Required",
  "text": "APPLICATION_STATUS: ERROR

- testApi: ERROR - Configuration error | Has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-api" when using mocked sub-system (mode "Required") - creates a snapshot (failing configuration w/o cache, missing path) 1`] = `
Object {
  "code": 503,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "ERROR",
    "statusCode": 503,
    "subSystems": Object {
      "testApi": Object {
        "key": "testApi",
        "message": "- testApi: ERROR - Configuration error | Has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n",
        "required": true,
        "responseTime": -1,
        "statusCode": 501,
      },
    },
  },
  "mode": "Required",
  "text": "APPLICATION_STATUS: ERROR

- testApi: ERROR - Configuration error | Has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-api" when using mocked sub-system (mode "Required") - creates a snapshot (failing configuration w/o cache, rejecting client) 1`] = `
Object {
  "code": 503,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "ERROR",
    "statusCode": 503,
    "subSystems": Object {
      "testApi": Object {
        "key": "testApi",
        "message": "- testApi: ERROR - Unable to connect to the service. The service is probably down or it is a networking issue | Response time: 79ms | Has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n",
        "required": true,
        "responseTime": 79,
        "statusCode": 502,
      },
    },
  },
  "mode": "Required",
  "text": "APPLICATION_STATUS: ERROR

- testApi: ERROR - Unable to connect to the service. The service is probably down or it is a networking issue | Response time: 79ms | Has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-api" when using mocked sub-system (mode "Required") - creates a snapshot (normal configuration w/o cache) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "testApi": Object {
        "key": "testApi",
        "message": "- testApi: OK | Response time: 79ms | Required to work: true",
        "required": true,
        "responseTime": 79,
        "statusCode": 200,
      },
    },
  },
  "mode": "Required",
  "text": "APPLICATION_STATUS: OK

- testApi: OK | Response time: 79ms | Required to work: true

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-api" when using mocked sub-system (mode "Required") - creates a snapshot (normal configuration with cache) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "undefined": Object {
        "message": "OK | Using previous cached response",
        "statusCode": 200,
      },
    },
  },
  "mode": "Required",
  "text": "APPLICATION_STATUS: OK

OK | Using previous cached response

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-api-client" when using mocked sub-system (mode "Optional") - creates a snapshot (configured with BasicAPI) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "testApiClient": Object {
        "key": "testApiClient",
        "message": "- testApiClient: OK | Response time: 79ms | Required to work: false",
        "required": false,
        "responseTime": 79,
        "statusCode": 200,
      },
    },
  },
  "mode": "Optional",
  "text": "APPLICATION_STATUS: OK

- testApiClient: OK | Response time: 79ms | Required to work: false

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-api-client" when using mocked sub-system (mode "Optional") - creates a snapshot (configured with generic API) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "testApiClient": Object {
        "key": "testApiClient",
        "message": "- testApiClient: OK | Response time: 79ms | Required to work: false",
        "required": false,
        "responseTime": 79,
        "statusCode": 200,
      },
    },
  },
  "mode": "Optional",
  "text": "APPLICATION_STATUS: OK

- testApiClient: OK | Response time: 79ms | Required to work: false

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-api-client" when using mocked sub-system (mode "Optional") - creates a snapshot (failing to resolve endpoint) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "testApiClient": Object {
        "key": "testApiClient",
        "message": "- testApiClient: ERROR - Configuration error | The application can still function without this service. | Ref: sfu8n1fu8n",
        "required": false,
        "responseTime": -1,
        "statusCode": 501,
      },
    },
  },
  "mode": "Optional",
  "text": "APPLICATION_STATUS: OK

- testApiClient: ERROR - Configuration error | The application can still function without this service. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-api-client" when using mocked sub-system (mode "Optional") - creates a snapshot (failing with BasicAPI) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "testApiClient": Object {
        "key": "testApiClient",
        "message": "- testApiClient: ERROR - Unable to connect to the service. The service is probably down or it is a networking issue | Response time: 79ms | The application can still function without this service. | Ref: sfu8n1fu8n",
        "required": false,
        "responseTime": 79,
        "statusCode": 502,
      },
    },
  },
  "mode": "Optional",
  "text": "APPLICATION_STATUS: OK

- testApiClient: ERROR - Unable to connect to the service. The service is probably down or it is a networking issue | Response time: 79ms | The application can still function without this service. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-api-client" when using mocked sub-system (mode "Optional") - creates a snapshot (failing with generic API) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "testApiClient": Object {
        "key": "testApiClient",
        "message": "- testApiClient: ERROR - Unable to connect to the service. The service is probably down or it is a networking issue | Response time: 79ms | The application can still function without this service. | Ref: sfu8n1fu8n",
        "required": false,
        "responseTime": 79,
        "statusCode": 502,
      },
    },
  },
  "mode": "Optional",
  "text": "APPLICATION_STATUS: OK

- testApiClient: ERROR - Unable to connect to the service. The service is probably down or it is a networking issue | Response time: 79ms | The application can still function without this service. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-api-client" when using mocked sub-system (mode "Required") - creates a snapshot (configured with BasicAPI) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "testApiClient": Object {
        "key": "testApiClient",
        "message": "- testApiClient: OK | Response time: 79ms | Required to work: true",
        "required": true,
        "responseTime": 79,
        "statusCode": 200,
      },
    },
  },
  "mode": "Required",
  "text": "APPLICATION_STATUS: OK

- testApiClient: OK | Response time: 79ms | Required to work: true

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-api-client" when using mocked sub-system (mode "Required") - creates a snapshot (configured with generic API) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "testApiClient": Object {
        "key": "testApiClient",
        "message": "- testApiClient: OK | Response time: 79ms | Required to work: true",
        "required": true,
        "responseTime": 79,
        "statusCode": 200,
      },
    },
  },
  "mode": "Required",
  "text": "APPLICATION_STATUS: OK

- testApiClient: OK | Response time: 79ms | Required to work: true

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-api-client" when using mocked sub-system (mode "Required") - creates a snapshot (failing to resolve endpoint) 1`] = `
Object {
  "code": 503,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "ERROR",
    "statusCode": 503,
    "subSystems": Object {
      "testApiClient": Object {
        "key": "testApiClient",
        "message": "- testApiClient: ERROR - Configuration error | Has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n",
        "required": true,
        "responseTime": -1,
        "statusCode": 501,
      },
    },
  },
  "mode": "Required",
  "text": "APPLICATION_STATUS: ERROR

- testApiClient: ERROR - Configuration error | Has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-api-client" when using mocked sub-system (mode "Required") - creates a snapshot (failing with BasicAPI) 1`] = `
Object {
  "code": 503,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "ERROR",
    "statusCode": 503,
    "subSystems": Object {
      "testApiClient": Object {
        "key": "testApiClient",
        "message": "- testApiClient: ERROR - Unable to connect to the service. The service is probably down or it is a networking issue | Response time: 79ms | Has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n",
        "required": true,
        "responseTime": 79,
        "statusCode": 502,
      },
    },
  },
  "mode": "Required",
  "text": "APPLICATION_STATUS: ERROR

- testApiClient: ERROR - Unable to connect to the service. The service is probably down or it is a networking issue | Response time: 79ms | Has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-api-client" when using mocked sub-system (mode "Required") - creates a snapshot (failing with generic API) 1`] = `
Object {
  "code": 503,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "ERROR",
    "statusCode": 503,
    "subSystems": Object {
      "testApiClient": Object {
        "key": "testApiClient",
        "message": "- testApiClient: ERROR - Unable to connect to the service. The service is probably down or it is a networking issue | Response time: 79ms | Has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n",
        "required": true,
        "responseTime": 79,
        "statusCode": 502,
      },
    },
  },
  "mode": "Required",
  "text": "APPLICATION_STATUS: ERROR

- testApiClient: ERROR - Unable to connect to the service. The service is probably down or it is a networking issue | Response time: 79ms | Has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-ldap" when using mocked sub-system (mode "Optional") - creates a snapshot (failing testSearch configuration, rejecting method) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "ldap": Object {
        "key": "ldap",
        "message": "- ldap: Error | The application can still function without this service functioning properly. | Ref: sfu8n1fu8n",
        "required": false,
        "statusCode": 503,
      },
    },
  },
  "mode": "Optional",
  "text": "APPLICATION_STATUS: OK

- ldap: Error | The application can still function without this service functioning properly. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-ldap" when using mocked sub-system (mode "Optional") - creates a snapshot (normal configuration) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "ldap": Object {
        "key": "ldap",
        "message": "- ldap: OK | Required to work: false",
        "required": false,
        "statusCode": 200,
      },
    },
  },
  "mode": "Optional",
  "text": "APPLICATION_STATUS: OK

- ldap: OK | Required to work: false

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-ldap" when using mocked sub-system (mode "Optional") - creates a snapshot (testSearch configuration) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "ldap": Object {
        "key": "ldap",
        "message": "- ldap: OK | Required to work: false",
        "required": false,
        "statusCode": 200,
      },
    },
  },
  "mode": "Optional",
  "text": "APPLICATION_STATUS: OK

- ldap: OK | Required to work: false

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-ldap" when using mocked sub-system (mode "Optional") - creates a snapshot (testSearch configuration, method w/o result) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "ldap": Object {
        "key": "ldap",
        "message": "- ldap: Error | The application can still function without this service functioning properly. | Ref: sfu8n1fu8n",
        "required": false,
        "statusCode": 503,
      },
    },
  },
  "mode": "Optional",
  "text": "APPLICATION_STATUS: OK

- ldap: Error | The application can still function without this service functioning properly. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-ldap" when using mocked sub-system (mode "Required") - creates a snapshot (failing testSearch configuration, rejecting method) 1`] = `
Object {
  "code": 503,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "ERROR",
    "statusCode": 503,
    "subSystems": Object {
      "ldap": Object {
        "key": "ldap",
        "message": "- ldap: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n",
        "required": true,
        "statusCode": 503,
      },
    },
  },
  "mode": "Required",
  "text": "APPLICATION_STATUS: ERROR

- ldap: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-ldap" when using mocked sub-system (mode "Required") - creates a snapshot (normal configuration) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "ldap": Object {
        "key": "ldap",
        "message": "- ldap: OK | Required to work: true",
        "required": true,
        "statusCode": 200,
      },
    },
  },
  "mode": "Required",
  "text": "APPLICATION_STATUS: OK

- ldap: OK | Required to work: true

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-ldap" when using mocked sub-system (mode "Required") - creates a snapshot (testSearch configuration) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "ldap": Object {
        "key": "ldap",
        "message": "- ldap: OK | Required to work: true",
        "required": true,
        "statusCode": 200,
      },
    },
  },
  "mode": "Required",
  "text": "APPLICATION_STATUS: OK

- ldap: OK | Required to work: true

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-ldap" when using mocked sub-system (mode "Required") - creates a snapshot (testSearch configuration, method w/o result) 1`] = `
Object {
  "code": 503,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "ERROR",
    "statusCode": 503,
    "subSystems": Object {
      "ldap": Object {
        "key": "ldap",
        "message": "- ldap: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n",
        "required": true,
        "statusCode": 503,
      },
    },
  },
  "mode": "Required",
  "text": "APPLICATION_STATUS: ERROR

- ldap: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-mongo-db" when using mocked sub-system (mode "Optional") - creates a snapshot (system down) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "mongodb": Object {
        "key": "mongodb",
        "message": "- mongodb: Error | The application can still function without this service functioning properly. | Ref: sfu8n1fu8n",
        "required": false,
        "statusCode": 503,
      },
    },
  },
  "mode": "Optional",
  "text": "APPLICATION_STATUS: OK

- mongodb: Error | The application can still function without this service functioning properly. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-mongo-db" when using mocked sub-system (mode "Optional") - creates a snapshot (system up) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "mongodb": Object {
        "key": "mongodb",
        "message": "- mongodb: OK | Required to work: false",
        "required": false,
        "statusCode": 200,
      },
    },
  },
  "mode": "Optional",
  "text": "APPLICATION_STATUS: OK

- mongodb: OK | Required to work: false

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-mongo-db" when using mocked sub-system (mode "Required") - creates a snapshot (system down) 1`] = `
Object {
  "code": 503,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "ERROR",
    "statusCode": 503,
    "subSystems": Object {
      "mongodb": Object {
        "key": "mongodb",
        "message": "- mongodb: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n",
        "required": true,
        "statusCode": 503,
      },
    },
  },
  "mode": "Required",
  "text": "APPLICATION_STATUS: ERROR

- mongodb: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-mongo-db" when using mocked sub-system (mode "Required") - creates a snapshot (system up) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "mongodb": Object {
        "key": "mongodb",
        "message": "- mongodb: OK | Required to work: true",
        "required": true,
        "statusCode": 200,
      },
    },
  },
  "mode": "Required",
  "text": "APPLICATION_STATUS: OK

- mongodb: OK | Required to work: true

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-redis" when using mocked sub-system (mode "Optional") - creates a snapshot (normal configuration) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "redis": Object {
        "key": "redis",
        "message": "- redis: OK | Required to work: false",
        "required": false,
        "statusCode": 200,
      },
    },
  },
  "mode": "Optional",
  "text": "APPLICATION_STATUS: OK

- redis: OK | Required to work: false

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-redis" when using mocked sub-system (mode "Optional") - creates a snapshot (rejecting method) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "redis": Object {
        "key": "redis",
        "message": "- redis: Error | The application can still function without this service functioning properly. | Ref: sfu8n1fu8n",
        "required": false,
        "statusCode": 503,
      },
    },
  },
  "mode": "Optional",
  "text": "APPLICATION_STATUS: OK

- redis: Error | The application can still function without this service functioning properly. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-redis" when using mocked sub-system (mode "Required") - creates a snapshot (normal configuration) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "redis": Object {
        "key": "redis",
        "message": "- redis: OK | Required to work: true",
        "required": true,
        "statusCode": 200,
      },
    },
  },
  "mode": "Required",
  "text": "APPLICATION_STATUS: OK

- redis: OK | Required to work: true

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-redis" when using mocked sub-system (mode "Required") - creates a snapshot (rejecting method) 1`] = `
Object {
  "code": 503,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "ERROR",
    "statusCode": 503,
    "subSystems": Object {
      "redis": Object {
        "key": "redis",
        "message": "- redis: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n",
        "required": true,
        "statusCode": 503,
      },
    },
  },
  "mode": "Required",
  "text": "APPLICATION_STATUS: ERROR

- redis: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-sql-db" when using mocked sub-system (mode "Optional") - creates a snapshot (normal configuration) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "sqldb": Object {
        "key": "sqldb",
        "message": "- sqldb: OK | Required to work: false",
        "required": false,
        "statusCode": 200,
      },
    },
  },
  "mode": "Optional",
  "text": "APPLICATION_STATUS: OK

- sqldb: OK | Required to work: false

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-sql-db" when using mocked sub-system (mode "Optional") - creates a snapshot (rejecting method) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "sqldb": Object {
        "key": "sqldb",
        "message": "- sqldb: Error | The application can still function without this service functioning properly. | Ref: sfu8n1fu8n",
        "required": false,
        "statusCode": 503,
      },
    },
  },
  "mode": "Optional",
  "text": "APPLICATION_STATUS: OK

- sqldb: Error | The application can still function without this service functioning properly. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-sql-db" when using mocked sub-system (mode "Required") - creates a snapshot (normal configuration) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "sqldb": Object {
        "key": "sqldb",
        "message": "- sqldb: OK | Required to work: true",
        "required": true,
        "statusCode": 200,
      },
    },
  },
  "mode": "Required",
  "text": "APPLICATION_STATUS: OK

- sqldb: OK | Required to work: true

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with sub-system "kth-node-sql-db" when using mocked sub-system (mode "Required") - creates a snapshot (rejecting method) 1`] = `
Object {
  "code": 503,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "ERROR",
    "statusCode": 503,
    "subSystems": Object {
      "sqldb": Object {
        "key": "sqldb",
        "message": "- sqldb: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n",
        "required": true,
        "statusCode": 503,
      },
    },
  },
  "mode": "Required",
  "text": "APPLICATION_STATUS: ERROR

- sqldb: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with three sub-systems at the same time - creates a snapshot (situations 1-1-1) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "agenda": Object {
        "key": "agenda",
        "message": "- agenda: OK | Required to work: false",
        "required": false,
        "statusCode": 200,
      },
      "redis": Object {
        "key": "redis",
        "message": "- redis: OK | Required to work: true",
        "required": true,
        "statusCode": 200,
      },
      "sqldb": Object {
        "key": "sqldb",
        "message": "- sqldb: OK | Required to work: true",
        "required": true,
        "statusCode": 200,
      },
    },
  },
  "text": "APPLICATION_STATUS: OK

- agenda: OK | Required to work: false
- redis: OK | Required to work: true
- sqldb: OK | Required to work: true

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with three sub-systems at the same time - creates a snapshot (situations 1-1-2) 1`] = `
Object {
  "code": 503,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "ERROR",
    "statusCode": 503,
    "subSystems": Object {
      "agenda": Object {
        "key": "agenda",
        "message": "- agenda: OK | Required to work: false",
        "required": false,
        "statusCode": 200,
      },
      "redis": Object {
        "key": "redis",
        "message": "- redis: OK | Required to work: true",
        "required": true,
        "statusCode": 200,
      },
      "sqldb": Object {
        "key": "sqldb",
        "message": "- sqldb: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n",
        "required": true,
        "statusCode": 503,
      },
    },
  },
  "text": "APPLICATION_STATUS: ERROR

- agenda: OK | Required to work: false
- redis: OK | Required to work: true
- sqldb: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with three sub-systems at the same time - creates a snapshot (situations 1-2-1) 1`] = `
Object {
  "code": 503,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "ERROR",
    "statusCode": 503,
    "subSystems": Object {
      "agenda": Object {
        "key": "agenda",
        "message": "- agenda: OK | Required to work: false",
        "required": false,
        "statusCode": 200,
      },
      "redis": Object {
        "key": "redis",
        "message": "- redis: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n",
        "required": true,
        "statusCode": 503,
      },
      "sqldb": Object {
        "key": "sqldb",
        "message": "- sqldb: OK | Required to work: true",
        "required": true,
        "statusCode": 200,
      },
    },
  },
  "text": "APPLICATION_STATUS: ERROR

- agenda: OK | Required to work: false
- redis: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n
- sqldb: OK | Required to work: true

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with three sub-systems at the same time - creates a snapshot (situations 1-2-2) 1`] = `
Object {
  "code": 503,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "ERROR",
    "statusCode": 503,
    "subSystems": Object {
      "agenda": Object {
        "key": "agenda",
        "message": "- agenda: OK | Required to work: false",
        "required": false,
        "statusCode": 200,
      },
      "redis": Object {
        "key": "redis",
        "message": "- redis: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n",
        "required": true,
        "statusCode": 503,
      },
      "sqldb": Object {
        "key": "sqldb",
        "message": "- sqldb: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n",
        "required": true,
        "statusCode": 503,
      },
    },
  },
  "text": "APPLICATION_STATUS: ERROR

- agenda: OK | Required to work: false
- redis: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n
- sqldb: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with three sub-systems at the same time - creates a snapshot (situations 2-1-1) 1`] = `
Object {
  "code": 200,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "OK",
    "statusCode": 200,
    "subSystems": Object {
      "agenda": Object {
        "key": "agenda",
        "message": "- agenda: Error | The application can still function without this service functioning properly. | Ref: sfu8n1fu8n",
        "required": false,
        "statusCode": 503,
      },
      "redis": Object {
        "key": "redis",
        "message": "- redis: OK | Required to work: true",
        "required": true,
        "statusCode": 200,
      },
      "sqldb": Object {
        "key": "sqldb",
        "message": "- sqldb: OK | Required to work: true",
        "required": true,
        "statusCode": 200,
      },
    },
  },
  "text": "APPLICATION_STATUS: OK

- agenda: Error | The application can still function without this service functioning properly. | Ref: sfu8n1fu8n
- redis: OK | Required to work: true
- sqldb: OK | Required to work: true

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with three sub-systems at the same time - creates a snapshot (situations 2-1-2) 1`] = `
Object {
  "code": 503,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "ERROR",
    "statusCode": 503,
    "subSystems": Object {
      "agenda": Object {
        "key": "agenda",
        "message": "- agenda: Error | The application can still function without this service functioning properly. | Ref: sfu8n1fu8n",
        "required": false,
        "statusCode": 503,
      },
      "redis": Object {
        "key": "redis",
        "message": "- redis: OK | Required to work: true",
        "required": true,
        "statusCode": 200,
      },
      "sqldb": Object {
        "key": "sqldb",
        "message": "- sqldb: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n",
        "required": true,
        "statusCode": 503,
      },
    },
  },
  "text": "APPLICATION_STATUS: ERROR

- agenda: Error | The application can still function without this service functioning properly. | Ref: sfu8n1fu8n
- redis: OK | Required to work: true
- sqldb: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with three sub-systems at the same time - creates a snapshot (situations 2-2-1) 1`] = `
Object {
  "code": 503,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "ERROR",
    "statusCode": 503,
    "subSystems": Object {
      "agenda": Object {
        "key": "agenda",
        "message": "- agenda: Error | The application can still function without this service functioning properly. | Ref: sfu8n1fu8n",
        "required": false,
        "statusCode": 503,
      },
      "redis": Object {
        "key": "redis",
        "message": "- redis: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n",
        "required": true,
        "statusCode": 503,
      },
      "sqldb": Object {
        "key": "sqldb",
        "message": "- sqldb: OK | Required to work: true",
        "required": true,
        "statusCode": 200,
      },
    },
  },
  "text": "APPLICATION_STATUS: ERROR

- agenda: Error | The application can still function without this service functioning properly. | Ref: sfu8n1fu8n
- redis: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n
- sqldb: OK | Required to work: true

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;

exports[`Class HealthCheck - in combination with three sub-systems at the same time - creates a snapshot (situations 2-2-2) 1`] = `
Object {
  "code": 503,
  "data": Object {
    "localSystems": Object {
      "message": "No checks specified.",
      "statusCode": 200,
    },
    "message": "ERROR",
    "statusCode": 503,
    "subSystems": Object {
      "agenda": Object {
        "key": "agenda",
        "message": "- agenda: Error | The application can still function without this service functioning properly. | Ref: sfu8n1fu8n",
        "required": false,
        "statusCode": 503,
      },
      "redis": Object {
        "key": "redis",
        "message": "- redis: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n",
        "required": true,
        "statusCode": 503,
      },
      "sqldb": Object {
        "key": "sqldb",
        "message": "- sqldb: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n",
        "required": true,
        "statusCode": 503,
      },
    },
  },
  "text": "APPLICATION_STATUS: ERROR

- agenda: Error | The application can still function without this service functioning properly. | Ref: sfu8n1fu8n
- redis: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n
- sqldb: Error | This service has to work for the APPLICATION_STATUS to say OK. | Ref: sfu8n1fu8n

- local system checks: No checks specified.

Hostname: test-host
(HealthCheckPOC)",
}
`;
